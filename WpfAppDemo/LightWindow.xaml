<Window
    x:Class="WpfAppDemo.LightWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:wpf.controls;assembly=wpf.controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfAppDemo"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="LightWindow"
    Width="800"
    Height="450"
    Background="#000000"
    mc:Ignorable="d">
    <Window.Resources>
        <RadialGradientBrush x:Key="lightColor" GradientOrigin="0.5,0.5">
            <GradientStop Offset="1" Color="#90ee90" />
            <GradientStop Offset="1" Color="#90ee90" />
            <GradientStop Offset="0.3" Color="#FFFFFF" />
        </RadialGradientBrush>
        <SolidColorBrush x:Key="darkColor" Color="#005500" />

        <Style x:Key="LightEllipse" TargetType="Ellipse">
            <Setter Property="Fill" Value="{StaticResource darkColor}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <!--<Trigger.EnterActions>
                        <BeginStoryboard x:Name="animation">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(Effect).Opacity"
                                    From="0.0"
                                    To="1.0"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="animation1">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="(Effect).Opacity"
                                    From="1.0"
                                    To="0.0"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>-->
                    <Setter Property="Fill" Value="{StaticResource lightColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">

                    <Setter Property="Fill" Value="{StaticResource darkColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Grid>
        <StackPanel>
            <Button
                Width="100"
                Height="20"
                Click="Button_Click"
                Content="change Color" />
            <controls:Lamp
                x:Name="lamp"
                Width="100"
                Height="100"
                Margin="10"
                BorderBrush="White"
                BorderThickness="1"
                CornerRadius="100"
                Foreground="AntiqueWhite" />
            <ToggleButton
                Width="50"
                Height="25"
                Content="&gt;"
                IsChecked="True"
                Style="{DynamicResource ToggleButtonStyle1}" />
            <Path
                Data="M5,0 L0,8.66 L10,8.66z M0,11.66 L10,11.66 L5,20.32z"
                Fill="#FFFFFF"
                Stroke="#FFFFFF"
                StrokeThickness="1" />
        </StackPanel>


        <!--<Ellipse
            x:Name="ellips"
            Width="100"
            Height="100"
            Style="{StaticResource LightEllipse}">
            <Ellipse.Effect>
                <DropShadowEffect
                    BlurRadius="30"
                    ShadowDepth="0"
                    Color="#90ee90"
                    />
            </Ellipse.Effect>
        </Ellipse>-->
        <!--<Ellipse Width="100" Height="100">
            <Ellipse.Effect>
                <DropShadowEffect
                    BlurRadius="15"
                    ShadowDepth="0"
                    Color="#FFFFFF" />
            </Ellipse.Effect>
        </Ellipse>
        <Ellipse Width="100" Height="100">
            <Ellipse.Effect>
                <DropShadowEffect
                    BlurRadius="15"
                    ShadowDepth="0"
                    Color="#90ee90" />
            </Ellipse.Effect>
        </Ellipse>-->
    </Grid>
</Window>
